(defparameter *MAX-RESULT* 4000000)

(defun add (operand1 operand2) 
  (+ operand1 operand2))

(defun is-even (number)
  (cond ((equal 0 number) 1)
        ((equal 0 (mod number 2)) 1)
        ((equal 1 (mod number 2)) 0)
        (t ()))
)

(defun fibinocci (number)
  (cond (( equal 0 number )  0)
        (( equal 1 number )  1)
        (t   ( + (fibinocci (- number 2)) (fibinocci (- number 1))))
        ))

(defun sum-first-4M-fibs (max-sum)
  (defvar counter 0)
  (defvar total-sum 0)
  (defvar fib-value 0)
  (setf counter 0)
  (setf total-sum 0)
  (setf fib-value 0)
  (loop
     (when (< max-sum total-sum)
       (print total-sum)
       (return))
     (setf fib-value (fibinocci counter))
     (setf counter (add counter 1))
     (if (equal 1 (is-even fib-value))
         (setf total-sum (add total-sum fib-value)))
     ))
